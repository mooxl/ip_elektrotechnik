---
import MobileNav from "@/components/blocks/MobileNav.svelte";
import type { Page } from "@/types";
import { getPages } from "@/utils/payload";

export interface PageWithChildren extends Page {
  children: PageWithChildren[];
}

const pages = await getPages();
const pageMap = new Map<string, PageWithChildren>();
pages.forEach((page) => {
  const pageWithChildren: PageWithChildren = { ...page, children: [] };
  pageMap.set(page.id, pageWithChildren);
});
pages.forEach((page) => {
  if (page.parent) {
    const parentId =
      typeof page.parent === "string" ? page.parent : page.parent.id;
    const parent = pageMap.get(parentId);
    if (parent) {
      parent.children.push(pageMap.get(page.id) as PageWithChildren);
    }
  }
});

const navigation: PageWithChildren[] = [];
pageMap.forEach((page) => {
  if (
    page.title !== "Startseite" &&
    (!page.parent || typeof page.parent === "string")
  ) {
    navigation.push(page);
  }
});
const sortNavigation = (pages: PageWithChildren[]) => {
  pages.sort((a, b) => {
    const orderA = a.order || Infinity;
    const orderB = b.order || Infinity;
    return orderA - orderB;
  });

  pages.forEach((page) => {
    sortNavigation(page.children);
  });
};
sortNavigation(navigation);

const pathname = new URL(Astro.request.url).pathname;
---

<nav class="text-mint fixed top-0 w-full bg-white h-14 shadow-sm z-50">
  <div class="container rounded-xl flex justify-between items-center h-full">
    <a href="/">
      <h1 class="font-bold text-3xl">Elektrotechnik</h1>
    </a>
    <div
      class="flex gap-x-10 1024:gap-x-3 text-lg h-full items-center 768:hidden"
    >
      {
        navigation.map((item) => (
          <div class="relative h-full flex items-center group">
            <a
              href={item.path + "/"}
              class:list={[
                "px-4 py-1 hover:bg-brown hover:bg-opacity-50 rounded-lg",
                pathname.includes(item.path!) && "bg-brown bg-opacity-50",
              ]}
            >
              {item.title}
            </a>
            {item.children.length > 0 && (
              <div class="absolute text-base top-full -left-4 p-4 gap-y-1 bg-white flex-col flex shadow-sm whitespace-nowrap rounded-b-lg invisible group-hover:visible">
                {item.children.map((child) => (
                  <a
                    href={child.path + "/"}
                    class="px-4 py-2 block hover:bg-brown hover:bg-opacity-50 rounded-lg"
                  >
                    {child.title}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))
      }
      <a
        href={"/blog"}
        class:list={[
          "px-4 py-1 hover:bg-brown hover:bg-opacity-50 rounded-lg",
          pathname.includes("/blog/"!) && "bg-brown bg-opacity-50",
        ]}
      >
        Blog
      </a>
    </div>
    <div class="hidden 768:block">
      <MobileNav navigation={navigation} client:load />
    </div>
  </div>
</nav>
